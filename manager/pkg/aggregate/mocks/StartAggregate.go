// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import command "hidevops.io/cube/manager/pkg/command"
import mock "github.com/stretchr/testify/mock"

// StartAggregate is an autogenerated mock type for the StartAggregate type
type StartAggregate struct {
	mock.Mock
}

// CreateProfile provides a mock function with given fields: namespace
func (_m *StartAggregate) CreateProfile(namespace string) error {
	ret := _m.Called(namespace)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(namespace)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateSecret provides a mock function with given fields: cmd, propMap
func (_m *StartAggregate) CreateSecret(cmd *command.PipelineStart, propMap map[string]string) error {
	ret := _m.Called(cmd, propMap)

	var r0 error
	if rf, ok := ret.Get(0).(func(*command.PipelineStart, map[string]string) error); ok {
		r0 = rf(cmd, propMap)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Init provides a mock function with given fields: cmd, propMap
func (_m *StartAggregate) Init(cmd *command.PipelineStart, propMap map[string]string) error {
	ret := _m.Called(cmd, propMap)

	var r0 error
	if rf, ok := ret.Get(0).(func(*command.PipelineStart, map[string]string) error); ok {
		r0 = rf(cmd, propMap)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
